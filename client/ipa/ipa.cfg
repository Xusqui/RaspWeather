[Upload]
# URL of the IPA installation on your server.
url=http://your.ipa/installation/directory
# Leave username and password empty if no authentication is required.
username=
password=
# Controls how frequently measurements are uploaded.
interval_seconds=60
# Data is buffered while the server is unreachable. If the upload request size
# exceeds this limit the entire buffer is deleted. The default of 100kB is large
# enough to cover extended outages and still small enough to then upload in
# reasonable time.
max_size_kb=100

[Timeouts]
# Wait for threads to shutdown gracefully. This should be much larger than the
# typical upload duration, so that in-flight uploads can finish.
shutdown_seconds=120
# Timeout for HTTP POST request (measurement upload).
http_request_seconds=60

[Wind]
# Debounce time for wind sensor, in milliseconds.
debounce_millis=10
# GPIO pin to use for the wind sensor input (in GPIO.BOARD notation).
input_pin=7
# Number of rising PLUS falling edges per single physical revolution (always an
# even number). To find out the value for your sensor, connect a multimeter and
# slowly turn the sensor 360 degrees. The angle between the edges does not need
# to be equal.
# Example: Switch goes from open -> closed -> open -> closed ==> 4 edges.
edges_per_revolution=4

##### Parameters for converting rotations per second (rps) to wind speed (v)
##### in km/h.
#####
##### The following values need to be found using wind_calibrate.py. Details are
##### provided in the instructions. Defaults are for the Eltako wind sensor,
##### which works very well for me. You can save yourself several hours of
##### calibration work if you get exactly this sensor.
##### http://www.eltako.com/fileadmin/downloads/en/datasheets/H_datasheet_WS.pdf
##### http://www.amazon.de/Eltako-Windsensor-WS/dp/B0018LBFG8
##### If you do get a different sensor and calibrate it, please let me know the
##### results so I can include them here. Thanks!
#####
##### The conversion formula is: lsf / (1 + rps) + hsf * rps
##### The high speed factor (hsf) determines the relation when the wind is
##### strong so that friction in the sensor is negligible. The low speed factor
##### (lsf) is the wind speed required to initially overcome friction.
high_speed_factor=3.013
low_speed_factor=1.761
##### If no rotation was detected after this amount of time, a speed of zero is
##### assumed. This value can be estimated. Note that it affects how quickly the
##### system can detect a "no wind" condition, so it should not be much larger
##### than a few seconds.
max_rotation_seconds=10

[Logging]
# See https://docs.python.org/2/library/logging.html#levels
# Set to DEBUG for maximum logging.
level=INFO
# Log files are rotated when they reach the below size.
max_file_size_kb=1024
# Number of rotated files to keep.
backup_count=10
